/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.3.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 2019年12月9日
 ***********************************************************************************************/

#ifndef SENSOR_INTERFACE_H
#define SENSOR_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../sample_device_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum SENSOR_TELEMETRY_TAG
{
    Sensor_CPUUSAGE_TELEMETRY,
    Sensor_GPUUSAGE_TELEMETRY,
    Sensor_MEMORYUSAGE_TELEMETRY
} SENSOR_TELEMETRY;

typedef enum SENSOR_READONLY_PROPERTY_TAG
{
    Sensor_WIFIMAC_PROPERTY,
    Sensor_LANMAC_PROPERTY
} SENSOR_PROPERTY;

// DigitalTwin interface name from service perspective.
static const char SensorInterfaceId[] = "urn:acer:EnvironmentalSensor:1";
static const char SensorInterfaceInstanceName[] = "sensor";

// Telemetry names for this interface.

static const char SensorInterface_CpuusageTelemetry[] = "cpuusage";

static const char SensorInterface_GpuusageTelemetry[] = "gpuusage";

static const char SensorInterface_MemoryusageTelemetry[] = "memoryusage";

// Property names for this interface.

#define SensorInterface_WifimacProperty "wifimac"

#define SensorInterface_LanmacProperty "lanmac"

// Command names for this interface

#define SensorInterface_RebootCommand "reboot"

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE SensorInterface_Create();

void SensorInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT SensorInterface_Telemetry_SendCpuusage();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Telemetry_SendGpuusage();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Telemetry_SendMemoryusage();

DIGITALTWIN_CLIENT_RESULT SensorInterface_Telemetry_SendAll();

#ifdef __cplusplus
}
#endif

#endif  // SENSOR_INTERFACE_H
